$column-count: 12 !default;
$column-selector: '.col' !default;
$column-properties: 'flex-basis', 'max-width' !default;
$offset-properties: 'margin-left' !default;
$gutter-width: 1rem !default;
$half-gutter-width: ($gutter-width / 2) !default;

@mixin percentWidth($property, $columns, $count) {
  #{$property}: ((100% / $columns) * $count);
}

@mixin columns($selector: $column-selector, $properties: $column-properties, $columns: $column-count) {
  @for $i from 1 through $columns {
    $iterator-selector: #{$selector}-#{$i};
  }
  @for $i from 1 through $columns {
    #{$selector}-#{$i} {
      @content;
      @each $prop in $properties {
        @include percentWidth($prop, $columns, $i);
      }
    }
  }
}


@mixin offsets($selector: $column-selector, $properties: $offset-properties, $columns: $column-count) {
  @for $i from 1 through $columns {
    #{$selector}-#{$i} {
      @extend %column;
    }
  }
  @for $i from 1 through $columns {
    #{$selector}-#{$i} {
      @content;
    }
  }
}


@mixin breakpoints($selector) {
  #{$selector} {
    @content;
  }
}

.row {
  box-sizing: border-box;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}

%column {
  box-sizing: border-box;
  flex-grow: 0;
  flex-shrink: 0;
  padding-right: $half-gutter-width;
  padding-left: $half-gutter-width;
}

@include columns();
@include offsets();

@include breakpoints('.start') {
  justify-content: flex-start;
}
@include breakpoints('.center') {
  justify-content: center;
}
@include breakpoints('.end') {
  justify-content: flex-end;
}
@include breakpoints('.top') {
  align-items: flex-start;
}
@include breakpoints('.middle') {
  align-items: center;
}
@include breakpoints('.bottom') {
  align-items: flex-end;
}
@include breakpoints('.around') {
  justify-content: space-around;
}
@include breakpoints('.between') {
  justify-content: space-between;
}